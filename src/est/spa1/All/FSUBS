      MODULE NMPRD4P
      USE SIZES, ONLY: DPSIZE
      USE NMPRD4,ONLY: VRBL
      IMPLICIT NONE
      SAVE
      REAL(KIND=DPSIZE), DIMENSION (:),POINTER ::COM
      REAL(KIND=DPSIZE), POINTER ::ET1,ET2,ET3,CL,V,KA,SC,CVERR,W,Y
      REAL(KIND=DPSIZE), POINTER ::A000046,A000047,A000048,A000049
      REAL(KIND=DPSIZE), POINTER ::A000050,A000051,A000052,A000053
      REAL(KIND=DPSIZE), POINTER ::D000001,D000002,D000003,D000004
      REAL(KIND=DPSIZE), POINTER ::D000005,D000006,D000007,D000008
      REAL(KIND=DPSIZE), POINTER ::D000009,D000042,D000048,D000047
      REAL(KIND=DPSIZE), POINTER ::D000046,D000041,D000045,D000044
      REAL(KIND=DPSIZE), POINTER ::D000040,D000043,D000052,D000064
      REAL(KIND=DPSIZE), POINTER ::D000065,D000066,D000053,D000069
      REAL(KIND=DPSIZE), POINTER ::D000070,D000054,D000072,C000031
      REAL(KIND=DPSIZE), POINTER ::D000073,D000074,D000075
      CONTAINS
      SUBROUTINE ASSOCNMPRD4
      COM=>VRBL
      ET1=>COM(000001);ET2=>COM(000002);ET3=>COM(000003)
      CL=>COM(000004);V=>COM(000005);KA=>COM(000006);SC=>COM(000007)
      CVERR=>COM(000008);W=>COM(000009);Y=>COM(000010)
      A000046=>COM(000011);A000047=>COM(000012);A000048=>COM(000013)
      A000049=>COM(000014);A000050=>COM(000015);A000051=>COM(000016)
      A000052=>COM(000017);A000053=>COM(000018);D000001=>COM(000019)
      D000002=>COM(000020);D000003=>COM(000021);D000004=>COM(000022)
      D000005=>COM(000023);D000006=>COM(000024);D000007=>COM(000025)
      D000008=>COM(000026);D000009=>COM(000027);D000042=>COM(000028)
      D000048=>COM(000029);D000047=>COM(000030);D000046=>COM(000031)
      D000041=>COM(000032);D000045=>COM(000033);D000044=>COM(000034)
      D000040=>COM(000035);D000043=>COM(000036);D000052=>COM(000037)
      D000064=>COM(000038);D000065=>COM(000039);D000066=>COM(000040)
      D000053=>COM(000041);D000069=>COM(000042);D000070=>COM(000043)
      D000054=>COM(000044);D000072=>COM(000045);C000031=>COM(000046)
      D000073=>COM(000047);D000074=>COM(000048);D000075=>COM(000049)
      END SUBROUTINE ASSOCNMPRD4
      END MODULE NMPRD4P
      SUBROUTINE PK(ICALL,IDEF,THETA,IREV,EVTREC,NVNT,INDXS,IRGG,GG,NETAS)      
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMBAYES_REAL,    ONLY: PRIOR_INFO
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_INT, ONLY: PRED_IGNORE_DATA,PRED_IGNORE_DATA_TEST
      USE PRCOM_INT, ONLY: DES_DER=>MITER
      USE NMPRD_REAL,ONLY: ETA,EPS                                            
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,COMACT,COMSAV,IFIRSTEM,FIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE NMPRD_INT, ONLY: IQUIT
      USE PROCM_INT, ONLY: NEWIND=>PNEWIF                                       
      USE NMBAYES_REAL, ONLY: LDF                                             
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                          
      REAL(KIND=DPSIZE) :: EVTREC                                               
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS,IRGG,NETAS              
      DIMENSION :: IDEF(7,*),THETA(*),EVTREC(IREV,*),INDXS(*),GG(IRGG,GPKD+1,*) 
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) THEN                                                      
      CALL ASSOCNMPRD4
      IDEF(   1,0001)=  -9
      IDEF(   1,0002)=  -1
      IDEF(   1,0003)=   0
      IDEF(   1,0004)=   0
      IDEF(   2,0003)=   0
      IDEF(   2,0004)=   0
      IDEF(   3,0002)=   4
      CALL GETETA(ETA)                                                          
      IF (IQUIT == 1) RETURN                                                    
      RETURN                                                                    
      ENDIF                                                                     
      IF (NEWIND /= 2) THEN
      IF (ICALL == 4) THEN
      CALL SIMETA(ETA)
      ELSE
      CALL GETETA(ETA)
      ENDIF
      IF (IQUIT == 1) RETURN
      ENDIF
 !  level            0
      B000001=ETA(001)*THETA(004) 
      B000002=DEXP(B000001) 
      ET1=B000002 
      B000003=ETA(002)*THETA(005) 
      B000004=DEXP(B000003) 
      ET2=B000004 
      B000005=ETA(003)*THETA(006) 
      B000006=DEXP(B000005) 
      ET3=B000006 
      CL=5.0D0*THETA(001)*ET1 
      V=85.D0*THETA(002)*ET2 
      KA=0.7D0*THETA(003)*ET3 
      SC=V 
      IF (FIRSTEM == 1) THEN
!                      A000032 = DERIVATIVE OF B000002 W.R.T. ETA(001)
      A000032=B000002*THETA(004) 
!                      A000037 = DERIVATIVE OF B000004 W.R.T. ETA(002)
      A000037=B000004*THETA(005) 
!                      A000042 = DERIVATIVE OF B000006 W.R.T. ETA(003)
      A000042=B000006*THETA(006) 
      B000007=5.0D0*THETA(001) 
!                      A000046 = DERIVATIVE OF CL W.R.T. ETA(001)
      A000046=B000007*A000032 
      B000008=85.D0*THETA(002) 
!                      A000048 = DERIVATIVE OF V W.R.T. ETA(002)
      A000048=B000008*A000037 
      B000009=0.7D0*THETA(003) 
!                      A000050 = DERIVATIVE OF KA W.R.T. ETA(003)
      A000050=B000009*A000042 
!                      A000052 = DERIVATIVE OF SC W.R.T. ETA(002)
      A000052=A000048 
      GG(0001,1,1)=CL
      GG(0001,0002,1)=A000046
      GG(0002,1,1)=V
      GG(0002,0003,1)=A000048
      GG(0003,1,1)=KA
      GG(0003,0004,1)=A000050
      GG(0004,1,1)=SC
      GG(0004,0003,1)=A000052
      ELSE
      GG(0001,1,1)=CL
      GG(0002,1,1)=V
      GG(0003,1,1)=KA
      GG(0004,1,1)=SC
      ENDIF
      IF (MSEC == 1) THEN
!                      A000034 = DERIVATIVE OF A000032 W.R.T. ETA(001)
      A000034=THETA(004)*A000032 
!                      A000039 = DERIVATIVE OF A000037 W.R.T. ETA(002)
      A000039=THETA(005)*A000037 
!                      A000044 = DERIVATIVE OF A000042 W.R.T. ETA(003)
      A000044=THETA(006)*A000042 
!                      A000047 = DERIVATIVE OF A000046 W.R.T. ETA(001)
      A000047=B000007*A000034 
!                      A000049 = DERIVATIVE OF A000048 W.R.T. ETA(002)
      A000049=B000008*A000039 
!                      A000051 = DERIVATIVE OF A000050 W.R.T. ETA(003)
      A000051=B000009*A000044 
!                      A000053 = DERIVATIVE OF A000052 W.R.T. ETA(002)
      A000053=A000049 
      GG(0001,0002,0002)=A000047
      GG(0002,0003,0003)=A000049
      GG(0003,0004,0004)=A000051
      GG(0004,0003,0003)=A000053
      ENDIF
      RETURN
      END
      SUBROUTINE ERROR (ICALL,IDEF,THETA,IREV,EVTREC,NVNT,INDXS,F,G,HH)       
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMPRD_INT, ONLY: PRED_IGNORE_DATA,PRED_IGNORE_DATA_TEST
      USE NMPRD_REAL,ONLY: ETA,EPS                                            
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,IQUIT,IFIRSTEM,FIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_INT, ONLY: NEWL2
      USE PROCM_INT, ONLY: NEWIND=>PNEWIF                                       
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                        
      REAL(KIND=DPSIZE) :: EVTREC                                             
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS                       
      DIMENSION :: IDEF(*),THETA(*),EVTREC(IREV,*),INDXS(*)                   
      REAL(KIND=DPSIZE) :: G(GERD,*),HH(HERD,*)                               
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) THEN                                                    
      CALL ASSOCNMPRD4
      IDEF(2)=-1
      IDEF(3)=000
      RETURN
      ENDIF
      IF (ICALL == 4) THEN
      IF (NEWL2 == 1) THEN
      CALL SIMEPS(EPS)
      IF (IQUIT == 1) RETURN
      ENDIF
      ENDIF
      D000001=G(001,1)
      D000002=G(002,1)
      D000003=G(003,1)
 !  level            0
      CVERR=0.05D0 
      W=THETA(007)*F*CVERR 
      Y=F+W*EPS(001) 
!                      C000031 = DERIVATIVE OF Y W.R.T. EPS(001)
      C000031=W 
      IF (FIRSTEM == 1) THEN !1
      B000001=THETA(007)*CVERR 
!                      D000040 = DERIVATIVE OF W W.R.T. ETA(003)
      D000040=B000001*D000003 
!                      D000041 = DERIVATIVE OF W W.R.T. ETA(002)
      D000041=B000001*D000002 
!                      D000042 = DERIVATIVE OF W W.R.T. ETA(001)
      D000042=B000001*D000001 
!                      D000049 = DERIVATIVE OF Y W.R.T. ETA(003)
      D000049=D000003 
!                      D000050 = DERIVATIVE OF Y W.R.T. ETA(002)
      D000050=D000002 
!                      D000051 = DERIVATIVE OF Y W.R.T. ETA(001)
      D000051=D000001 
!                      D000052 = DERIVATIVE OF Y W.R.T. ETA(001)
      D000052=EPS(001)*D000042+D000051 
!                      D000053 = DERIVATIVE OF Y W.R.T. ETA(002)
      D000053=EPS(001)*D000041+D000050 
!                      D000054 = DERIVATIVE OF Y W.R.T. ETA(003)
      D000054=EPS(001)*D000040+D000049 
!                      D000073 = DERIVATIVE OF C000031 W.R.T. ETA(001)
      D000073=D000042 
!                      D000074 = DERIVATIVE OF C000031 W.R.T. ETA(002)
      D000074=D000041 
!                      D000075 = DERIVATIVE OF C000031 W.R.T. ETA(003)
      D000075=D000040 
      G(001,1)=D000052
      G(002,1)=D000053
      G(003,1)=D000054
      ENDIF !1
      HH(001,1)=C000031
      IF (FIRSTEM == 1) THEN !2
      HH(001,002)=D000073
      HH(001,003)=D000074
      HH(001,004)=D000075
      ENDIF !2
      IF (MSEC == 1) THEN
      D000004=G(001,002)
      D000005=G(002,002)
      D000006=G(002,003)
      D000007=G(003,002)
      D000008=G(003,003)
      D000009=G(003,004)
!                      D000043 = DERIVATIVE OF D000040 W.R.T. ETA(003)
      D000043=B000001*D000009 
!                      D000044 = DERIVATIVE OF D000041 W.R.T. ETA(003)
      D000044=B000001*D000008 
!                      D000045 = DERIVATIVE OF D000041 W.R.T. ETA(002)
      D000045=B000001*D000006 
!                      D000046 = DERIVATIVE OF D000042 W.R.T. ETA(003)
      D000046=B000001*D000007 
!                      D000047 = DERIVATIVE OF D000042 W.R.T. ETA(002)
      D000047=B000001*D000005 
!                      D000048 = DERIVATIVE OF D000042 W.R.T. ETA(001)
      D000048=B000001*D000004 
!                      D000055 = DERIVATIVE OF D000049 W.R.T. ETA(003)
      D000055=D000009 
!                      D000056 = DERIVATIVE OF D000050 W.R.T. ETA(003)
      D000056=D000008 
!                      D000057 = DERIVATIVE OF D000050 W.R.T. ETA(002)
      D000057=D000006 
!                      D000058 = DERIVATIVE OF D000051 W.R.T. ETA(003)
      D000058=D000007 
!                      D000059 = DERIVATIVE OF D000051 W.R.T. ETA(002)
      D000059=D000005 
!                      D000060 = DERIVATIVE OF D000051 W.R.T. ETA(001)
      D000060=D000004 
!                      D000061 = DERIVATIVE OF D000052 W.R.T. ETA(001)
      D000061=EPS(001)*D000048 
!                      D000062 = DERIVATIVE OF D000052 W.R.T. ETA(002)
      D000062=EPS(001)*D000047 
!                      D000063 = DERIVATIVE OF D000052 W.R.T. ETA(003)
      D000063=EPS(001)*D000046 
!                      D000064 = DERIVATIVE OF D000052 W.R.T. ETA(001)
      D000064=D000060+D000061 
!                      D000065 = DERIVATIVE OF D000052 W.R.T. ETA(002)
      D000065=D000059+D000062 
!                      D000066 = DERIVATIVE OF D000052 W.R.T. ETA(003)
      D000066=D000058+D000063 
!                      D000067 = DERIVATIVE OF D000053 W.R.T. ETA(002)
      D000067=EPS(001)*D000045 
!                      D000068 = DERIVATIVE OF D000053 W.R.T. ETA(003)
      D000068=EPS(001)*D000044 
!                      D000069 = DERIVATIVE OF D000053 W.R.T. ETA(002)
      D000069=D000057+D000067 
!                      D000070 = DERIVATIVE OF D000053 W.R.T. ETA(003)
      D000070=D000056+D000068 
!                      D000071 = DERIVATIVE OF D000054 W.R.T. ETA(003)
      D000071=EPS(001)*D000043 
!                      D000072 = DERIVATIVE OF D000054 W.R.T. ETA(003)
      D000072=D000055+D000071 
      G(001,002)=D000064
      G(002,002)=D000065
      G(002,003)=D000069
      G(003,002)=D000066
      G(003,003)=D000070
      G(003,004)=D000072
      ENDIF
      F=Y
      RETURN
      END
      SUBROUTINE FSIZESR(NAME_FSIZES,F_SIZES)
      USE SIZES, ONLY: ISIZE
      INTEGER(KIND=ISIZE), DIMENSION(*) :: F_SIZES
      CHARACTER(LEN=*),    DIMENSION(*) :: NAME_FSIZES
      NAME_FSIZES(01)='LTH'; F_SIZES(01)=7
      NAME_FSIZES(02)='LVR'; F_SIZES(02)=4
      NAME_FSIZES(03)='LVR2'; F_SIZES(03)=0
      NAME_FSIZES(04)='LPAR'; F_SIZES(04)=14
      NAME_FSIZES(05)='LPAR3'; F_SIZES(05)=0
      NAME_FSIZES(06)='NO'; F_SIZES(06)=0
      NAME_FSIZES(07)='MMX'; F_SIZES(07)=1
      NAME_FSIZES(08)='LNP4'; F_SIZES(08)=0
      NAME_FSIZES(09)='LSUPP'; F_SIZES(09)=1
      NAME_FSIZES(10)='LIM7'; F_SIZES(10)=0
      NAME_FSIZES(11)='LWS3'; F_SIZES(11)=0
      NAME_FSIZES(12)='MAXIDS'; F_SIZES(12)=100
      NAME_FSIZES(13)='LIM1'; F_SIZES(13)=0
      NAME_FSIZES(14)='LIM2'; F_SIZES(14)=0
      NAME_FSIZES(15)='LIM3'; F_SIZES(15)=0
      NAME_FSIZES(16)='LIM4'; F_SIZES(16)=0
      NAME_FSIZES(17)='LIM5'; F_SIZES(17)=0
      NAME_FSIZES(18)='LIM6'; F_SIZES(18)=0
      NAME_FSIZES(19)='LIM8'; F_SIZES(19)=0
      NAME_FSIZES(20)='LIM10'; F_SIZES(20)=0
      NAME_FSIZES(21)='LIM11'; F_SIZES(21)=0
      NAME_FSIZES(22)='LIM13'; F_SIZES(22)=0
      NAME_FSIZES(23)='LIM15'; F_SIZES(23)=0
      NAME_FSIZES(24)='LIM16'; F_SIZES(24)=0
      NAME_FSIZES(25)='MAXRECID'; F_SIZES(25)=200
      NAME_FSIZES(26)='PC'; F_SIZES(26)=30
      NAME_FSIZES(27)='PCT'; F_SIZES(27)=30
      NAME_FSIZES(28)='PIR'; F_SIZES(28)=700
      NAME_FSIZES(29)='PD'; F_SIZES(29)=50
      NAME_FSIZES(30)='PAL'; F_SIZES(30)=50
      NAME_FSIZES(31)='MAXFCN'; F_SIZES(31)=1000000
      NAME_FSIZES(32)='MAXIC'; F_SIZES(32)=90
      NAME_FSIZES(33)='PG'; F_SIZES(33)=80
      NAME_FSIZES(34)='NPOPMIXMAX'; F_SIZES(34)=0
      NAME_FSIZES(35)='MAXOMEG'; F_SIZES(35)=3
      NAME_FSIZES(36)='MAXPTHETA'; F_SIZES(36)=8
      NAME_FSIZES(37)='MAXITER'; F_SIZES(37)=20
      NAME_FSIZES(38)='ISAMPLEMAX'; F_SIZES(38)=0
      NAME_FSIZES(39)='DIMTMP'; F_SIZES(39)=0
      NAME_FSIZES(40)='DIMCNS'; F_SIZES(40)=0
      NAME_FSIZES(41)='DIMNEW'; F_SIZES(41)=0
      NAME_FSIZES(42)='PDT'; F_SIZES(42)=1
      NAME_FSIZES(43)='LADD_MAX'; F_SIZES(43)=0
      NAME_FSIZES(44)='MAXSIDL'; F_SIZES(44)=0
      NAME_FSIZES(45)='NTT'; F_SIZES(45)=7
      NAME_FSIZES(46)='NOMEG'; F_SIZES(46)=3
      NAME_FSIZES(47)='NSIGM'; F_SIZES(47)=1
      NAME_FSIZES(48)='PPDT'; F_SIZES(48)=1
      NAME_FSIZES(49)='PAST_SIZE'; F_SIZES(49)=4000
      NAME_FSIZES(50)='MAXNRDS'; F_SIZES(50)=30
      RETURN
      END SUBROUTINE FSIZESR
      SUBROUTINE MUMODEL2(THETA,MU_,ICALL,IDEF,NEWIND,&
      EVTREC,DATREC,IREV,NVNT,INDXS,F,G,H,IRGG,GG,NETAS)
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMBAYES_REAL,    ONLY: PRIOR_INFO
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_INT, ONLY: PRED_IGNORE_DATA,PRED_IGNORE_DATA_TEST
      USE PRCOM_INT, ONLY: DES_DER=>MITER
      USE NMPRD_REAL,ONLY: ETA,EPS
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,COMACT,COMSAV,IFIRSTEM,FIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE NMPRD_INT, ONLY: IQUIT
      USE NMBAYES_REAL, ONLY: LDF
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)
      REAL(KIND=DPSIZE)   :: MU_(*)
      INTEGER NEWIND
      REAL(KIND=DPSIZE) :: EVTREC
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS,IRGG,NETAS
      DIMENSION :: IDEF(7,*),THETA(*),EVTREC(IREV,*),INDXS(*),GG(IRGG,GPKD+1,*)
      RETURN
      END
